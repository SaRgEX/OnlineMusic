// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/songs": {
            "get": {
                "description": "Get all songs with filtration by each column and pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "songs"
                ],
                "summary": "Get all songs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Performer",
                        "name": "performer_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Song",
                        "name": "song",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date",
                        "description": "Start Date",
                        "name": "startDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date",
                        "description": "End Date",
                        "name": "endDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Link",
                        "name": "link",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Lyrics",
                        "name": "lyric",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Cursor",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Songs",
                        "schema": {
                            "$ref": "#/definitions/model.PaginatedSong"
                        }
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/songs/": {
            "post": {
                "description": "Add song by model.SongInput. Make a fetch request to the third party api.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "songs"
                ],
                "summary": "Add song",
                "parameters": [
                    {
                        "description": "Song",
                        "name": "song",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SongInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status",
                        "schema": {
                            "$ref": "#/definitions/handler.statusResponse"
                        }
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/songs/{id}": {
            "put": {
                "description": "Update song by id from query",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "songs"
                ],
                "summary": "Update song",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Song",
                        "name": "song",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateSongInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status",
                        "schema": {
                            "$ref": "#/definitions/handler.statusResponse"
                        }
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete song by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "songs"
                ],
                "summary": "Delete song",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status",
                        "schema": {
                            "$ref": "#/definitions/handler.statusResponse"
                        }
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/songs/{id}/lyrics": {
            "get": {
                "description": "Get song by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "songs"
                ],
                "summary": "Get song's text with pagination",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Cursor",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lyrics",
                        "schema": {
                            "$ref": "#/definitions/model.PaginatedLyric"
                        }
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.errorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.statusResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "model.PaginatedLyric": {
            "type": "object",
            "properties": {
                "lyrics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "model.PaginatedSong": {
            "type": "object",
            "properties": {
                "last_id": {
                    "type": "integer"
                },
                "songs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.SongOutput"
                    }
                }
            }
        },
        "model.SongInput": {
            "type": "object",
            "required": [
                "name",
                "performer"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "performer": {
                    "type": "integer"
                }
            }
        },
        "model.SongOutput": {
            "type": "object",
            "properties": {
                "link": {
                    "type": "string",
                    "example": "https://www.youtube.com/"
                },
                "lyric": {
                    "type": "string",
                    "example": "Ooh baby, don't you know I suffer?\\nOoh baby, can you hear me moan?"
                },
                "performer": {
                    "type": "string",
                    "example": "singer"
                },
                "release_date": {
                    "type": "string",
                    "example": "2020-01-01"
                },
                "song": {
                    "type": "string",
                    "example": "Ooh Baby"
                }
            }
        },
        "model.UpdateSongInput": {
            "type": "object",
            "properties": {
                "link": {
                    "type": "string"
                },
                "lyric": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "performer_id": {
                    "type": "string"
                },
                "release_date": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.0.1",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "OnlineMusic",
	Description:      "API Server for online music library",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
